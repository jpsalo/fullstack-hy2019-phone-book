{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Notification","_ref","message","undefined","react_default","a","createElement","className","type","text","Filter","personsFilter","handleFilterChange","value","onChange","PersonForm","_ref2","addPerson","name","handleNameChange","number","handleNumberChange","onSubmit","required","Persons","_ref3","persons","removePerson","map","person","key","onClick","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","setMessage","useEffect","personService","initialPersons","Fragment","components_Notification","App_Filter","event","target","App_PersonForm","preventDefault","lowerCaseName","toLowerCase","existingPerson","find","window","confirm","changedPerson","objectSpread","returnedPerson","setTimeout","catch","error","App_Persons","stringToCompare","filter","includes","filterPersonsToShow","p","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4b4e7db.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === undefined) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst Filter = ({ personsFilter, handleFilterChange }) => {\n  return (\n    <div>\n      rajaa näytettäviä: <input\n        value={personsFilter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addPerson, name, handleNameChange, number, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        nimi: <input\n          value={name}\n          onChange={handleNameChange}\n          required\n        />\n      </div>\n      <div>\n        numero: <input\n          value={number}\n          onChange={handleNumberChange}\n          required\n        />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, removePerson }) => {\n  const rows = () =>\n    persons.map(person =>\n      <div key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => removePerson(person.id)}>poista</button>\n      </div>\n    )\n\n  return (\n    rows()\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ personsFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState()\n\n  const getPersons = () => {\n    personService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n    })\n  }\n  useEffect(getPersons, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const lowerCaseName = newName.toLowerCase()\n    const existingPerson = persons.find( person => \n      person.name.toLowerCase() === lowerCaseName \n    )\n\n    if (existingPerson) {\n      if (window.confirm(`${newName} on jo olemassa. Korvataanko vanha numero uudella?`)) {\n        const changedPerson = {...existingPerson, number: newNumber}\n        personService.update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person =>\n              person.id !== returnedPerson.id ? person : returnedPerson\n            ))\n            setNewName('')\n            setNewNumber('')\n            setMessage({\n              text: `Muokattiin ${returnedPerson.name}`,\n              type: 'success',\n            })\n            setTimeout(() => {\n              setMessage({})\n            }, 5000)\n          })\n          .catch(error => {\n            setMessage({\n              text: `Henkilö ${existingPerson.name} oli jo poistettu`,\n              type: 'error',\n            })\n            setTimeout(() => {\n              setMessage({})\n            }, 5000)\n          })\n      }\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    personService.create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage({\n          text: `Lisättiin ${returnedPerson.name}`,\n          type: 'success',\n        })\n        setTimeout(() => {\n          setMessage({})\n        }, 5000)\n      })\n  }\n\n  const removePerson = id => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Poistetaanko ${person.name}?`)) {\n      personService.remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          setMessage({\n            text: `Poistettiin ${person.name}`,\n            type: 'success',\n          })\n          setTimeout(() => {\n            setMessage({})\n          }, 5000)\n        })\n    }\n  }\n\n  const filterPersonsToShow = () => {\n    if (personsFilter) {\n      const stringToCompare = personsFilter.toLowerCase()\n      return persons.filter(person => person.name.toLowerCase().includes(stringToCompare))\n    } else {\n      return persons\n    }\n  }\n\n  return (\n    <>\n      <h1>Puhelinluettelo</h1>\n\n      <Notification message={message} />\n\n      <Filter personsFilter={personsFilter} handleFilterChange={handleFilterChange} />\n\n      <h2>Lisää uusi</h2>\n      <PersonForm \n        addPerson={addPerson} \n        name={newName} \n        handleNameChange={handleNameChange} \n        number={newNumber} \n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numerot</h2>\n      <Persons persons={filterPersonsToShow()} removePerson={removePerson} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}